//18\12\2017 andnov
//If the TRA namespace object is not defined, create it.
if (typeof (TRA) == "undefined") { TRA = {}; }
// Create Namespace container for functions in this library;
TRA.OpportunityRibbonLibrary = {};

TRA.OpportunityRibbonLibrary.checkInstance = function () {
    var orgName = Xrm.Page.context.getOrgUniqueName();
    if (orgName === "transas2") {  //Prod
        return false;
    } else if (orgName === "transas") { //dev
        return true;
    } else if (orgName === "orga5a7fa35") { //uat
        return true;
    } else { //default
        return false;
    }
};

TRA.OpportunityRibbonLibrary.openConfigurator = function () {
    var solutionControl = Xrm.Page.getControl("new_solutions");
    var priceListControl = Xrm.Page.getControl("pricelevelid");
    var currencyControl = Xrm.Page.getControl("transactioncurrencyid");
    var solutionValue = Xrm.Page.getAttribute("new_solutions").getValue();
    var priceListValue = Xrm.Page.getAttribute("pricelevelid").getValue();
    var currencyValue = Xrm.Page.getAttribute("transactioncurrencyid").getValue();

    if (solutionControl && priceListControl && currencyValue) {
        console.log("All controls are on form");
        if (solutionValue != "5" && solutionValue != "4") {
            console.log("TRA.solutionValue:" + solutionValue);
            Xrm.Utility.alertDialog("Solution must be FOS or Academy");
        } /*else if (currencyValue[0].name != "US Dollar") {
            console.log("TRA.currencyValue:" + currencyValue);
            //Xrm.Utility.alertDialog("Currency must be US Dollar");
        } else if (priceListValue === null) {
            console.log("TRA.priceListValue:" + priceListValue);
            Xrm.Utility.alertDialog("PriceList must be selected");
        } else if (!priceListValue[0].name.match(/FOS/gi) && !priceListValue[0].name.match(/SCS/gi)) {
            console.log("TRA.priceListValue:" + priceListValue);
            Xrm.Utility.alertDialog("FOS or SCS PriceList must be selected");
        } */ else {
            var prefix = "https://weita-crmfirst.transas.com/";
            var ISV = "/QuoteConfigurator/?commandprops=";
            //var orgLcId = "&orglcid=" + Xrm.Page.context.getOrgLcid();
            //var userLcId = "&userlcid=" + Xrm.Page.context.getUserLcid();
            var itemId = "&itemid=" + encodeURI(Xrm.Page.data.entity.getId());
            var orgName = "&orgname=" + Xrm.Page.context.getOrgUniqueName();
            var instance = Xrm.Page.context.getOrgUniqueName();
            if (instance === "transas2") {
                //isvInstance = "ISV";
                isvInstance = "ISVDev";
            }
            else if (instance === "orgbe46661f") {
                isvInstance = "ISVDev";
            } else {
                //isvInstance = "ISVUat";
                isvInstance = "ISVDev";
            };
            var typeName = "&typename=" + Xrm.Page.data.entity.getEntityName();
            var userId = "&userid=" + encodeURI(Xrm.Page.context.getUserId());
            var newUrl;
            //newUrl = prefix + instance + ISV + userId + itemId + orgLcId + orgName + typeName + userLcId;
            newUrl = prefix + isvInstance + ISV + userId + itemId + orgName + typeName;
            console.log(newUrl);
            window.open(newUrl, "FOS Configurator");

        }
    }
    };

    TRA.OpportunityRibbonLibrary.checkApprovalStage = function () {
        var stageName = Xrm.Page.data.process.getActiveStage().getName();
        switch (stageName) {
            case "Bid Approval":
                console.log("it is Bid Approval");
                return true;
                break;
            case "Contract Approval":
                console.log("it is Contract Approval");
                return true;
                break;
            default:
                console.log("it is Not Approval");
                return false;
                break;
        };
    };

   


    //andnov 05sep2018  https://jira.transas.com/browse/JIRAPM-24160
    //for ribbon WON button
    //function to get status of the process if = finished - return true - show WON button

//for form
    function checkProcessStatusForm(){
        if (Xrm.Page.data.process.getStatus() == "finished") {
            return true;
        } else {
            return false;
        }
    }
    //for grids
    //var processIsFinished = 0;
    function checkProcessStatusGrid(rowIds) {
        var processIsFinished = 0;
        //console.log("TRA.test:", rowIds);
        if (rowIds.length == 1) {
            processIsFinished = getProcessStatus(rowIds[0]); //request of 'crm1st_opportunitybidapprovalprocesses'
        }
        if (processIsFinished == 1) {
            console.log("TRA. WON button enabled");
            return true;
        } else {
            console.log("TRA. WON button disabled");
            return false;
        }
    }



    function getProcessStatus(oppID) {
        oppID = oppID.replace('{', '').replace('}', '');
        var req = new XMLHttpRequest();
        var finishedCount = 0;
        req.open("GET", Xrm.Page.context.getClientUrl() + "/api/data/v8.2/crm1st_opportunitybidapprovalprocesses?$select=statuscode&$filter=_bpf_opportunityid_value eq " + oppID + "", false);
        req.setRequestHeader("OData-MaxVersion", "4.0");
        req.setRequestHeader("OData-Version", "4.0");
        req.setRequestHeader("Accept", "application/json");
        req.setRequestHeader("Content-Type", "application/json; charset=utf-8");
        req.setRequestHeader("Prefer", "odata.include-annotations=\"*\"");
        req.onreadystatechange = function () {
            if (this.readyState === 4) {
                req.onreadystatechange = null;
                if (this.status === 200) {
                    var results = JSON.parse(this.response);
                    for (var i = 0; i < results.value.length; i++) {
                        var statuscode = results.value[i]["statuscode"];
                        console.log("TRA.getProcessStatus: " + statuscode);
                        if (statuscode == 2) { finishedCount++ }; // '2' is for 'finished' 
                    }
                    console.log("TRA.finishedCount: " + finishedCount);
                  
                } else {
                    console.log("TRA.getProcessStatus failed: " + this.statusText);
                }
                
            }
            
        };
        req.send();
        return finishedCount;
    }

    //end of andnov 05sep2018  https://jira.transas.com/browse/JIRAPM-24160