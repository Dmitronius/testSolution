function refreshForm (){
    setTimeout(() => {
   //Xrm.Page.ui.setFormNotification("Please refresh the page", "INFO", "uniqueId")
   //    Xrm.Utility.alertDialog("Submit started", function(){Xrm.Page.data.refresh(false);});
   Xrm.Page.data.refresh(false);
    }, 7000);
   }
   
   function saveAndRefreshForm (){
       Xrm.Page.data.refresh(true);
   }
   
   
   //andnov 12-10-2018 https://jira.transas.com/browse/CRM-397 

   //to check if current users has any coes to approve at all
   function checkIsUserApprover() {
       var userID = Xrm.Page.context.getUserId();
       userID = userID.replace('{', '').replace('}', '');
       console.log("TRA.Currentuser ID: " + userID);
       //var coeCount = 0;
       var coeCount = getCoeCountSync(userID);
       console.log ("coeCount " + coeCount);
       if (coeCount >= 1) {
               console.log("TRA. Enabling Approve and Reject buttons");
               //returnTrue ();
               return true;
           } else {
               console.log("TRA. Disabling Approve\Reject buttons");
               //returnFalse ();
               return false;
           }
       /*
       //Async Version
       getCoeCount(userID, function (returnCount) {
           console.log("returnCount: " + returnCount);
           coeCount = returnCount;
           console.log("TRA. user is approver for " + coeCount + " Centers of Excellence");
           if (coeCount >= 1) {
               console.log("TRA. Enabling Approve and Reject buttons");
               returnTrue ();
               return true;
           } else {
               console.log("TRA. Disabling Approve\Reject buttons");
               returnFalse ();
               return false;
           }
          });
          */

   
   }
   
   function returnTrue (){
       return true;
   }
   function returnFalse (){
       return false;
   }
   
   
   //AsyncVersion getting all CoEs where user is tier1 or tier2 approver
   /*
   function getCoeCountAsync (userID,callback) {
   var req = new XMLHttpRequest();
   req.open("GET", Xrm.Page.context.getClientUrl() + "/api/data/v8.2/tra_centerofexcelences?$filter=( _tra_tier2approverid_value eq " + userID + " or  _tra_tier1approverid_value eq "+userID+")&$count=true", true);
   req.setRequestHeader("OData-MaxVersion", "4.0");
   req.setRequestHeader("OData-Version", "4.0");
   req.setRequestHeader("Accept", "application/json");
   req.setRequestHeader("Content-Type", "application/json; charset=utf-8");
   req.onreadystatechange = function() {
       if (this.readyState === 4) {
           req.onreadystatechange = null;
           if (this.status === 200) {
               var results = JSON.parse(this.response);
               var recordCount = results["@odata.count"];
               for (var i = 0; i < results.value.length; i++) {
                   var tra_centerofexcelenceid = results.value[i]["tra_centerofexcelenceid"];
               }
               callback(recordCount);
           } else {
               Xrm.Utility.alertDialog(this.statusText);
           }
       }
   };
   req.send();    
   }
*/

      //Syn Version  - getting all CoEs where user is tier1 or tier2 approver
   function getCoeCountSync (userID) {
   var req = new XMLHttpRequest();
   req.open("GET", Xrm.Page.context.getClientUrl() + "/api/data/v8.2/tra_centerofexcelences?$filter=( _tra_tier2approverid_value eq " + userID + " or  _tra_tier1approverid_value eq "+userID+")&$count=true", false);
   req.setRequestHeader("OData-MaxVersion", "4.0");
   req.setRequestHeader("OData-Version", "4.0");
   req.setRequestHeader("Accept", "application/json");
   req.setRequestHeader("Content-Type", "application/json; charset=utf-8");
   var recordCount;
   req.onreadystatechange = function() {
       if (this.readyState === 4) {
           req.onreadystatechange = null;
           if (this.status === 200) {
               var results = JSON.parse(this.response);
               recordCount = results["@odata.count"];
               for (var i = 0; i < results.value.length; i++) {
                   var tra_centerofexcelenceid = results.value[i]["tra_centerofexcelenceid"];
               }
               //return recordCount;
           } else {
               Xrm.Utility.alertDialog(this.statusText);
           }
       }
      // return recordCount;
   };
   req.send();    
  return recordCount;
   }
   
   //to check if current users has any coes to approve for this TR
   function checkIsUserApproverForTR() {
       var userID = Xrm.Page.context.getUserId();
       userID = userID.replace('{', '').replace('}', '');
       console.log("TRA.Currentuser ID: " + userID);

       var approvalStatus = Xrm.Page.getAttribute("tra_approvalstatuscode").getValue();

       var timeReportT1Approver = Xrm.Page.getAttribute("tra_tier1approverid").getValue();
       timeReportT1Approver = timeReportT1Approver[0].id.replace('{', '').replace('}', '');
       console.log("TRA. timeReportT1ApproverID: " + timeReportT1Approver);

       var timeReportT2Approver = Xrm.Page.getAttribute("tra_tier2approverid").getValue();
       timeReportT2Approver = timeReportT2Approver[0].id.replace('{', '').replace('}', '');
       console.log("TRA. timeReportT2ApproverID: " + timeReportT2Approver);

       var isApprover = false
       switch (approvalStatus) {
           case 167490001:
               if (userID == timeReportT1Approver) {
                   isApprover = true;
                   Xrm.Page.ui.setFormNotification("You are current Pre-Approver of this Time Report", "INFO", "preapprovernotifid");
                   //refreshForm();
               };

               break;
           case 167490004:
               if (userID == timeReportT2Approver) {
                   isApprover = true;
                   Xrm.Page.ui.setFormNotification("You are current Approver of this Time Report", "INFO", "approvernotifid");
                   //refreshForm();
               };

               break;
       };

       console.log("TRA. isApprover: " + isApprover);
       return isApprover;


   }

 //to check if current users is Employee of this TR and can Submit it
   function checkIsUserEmployeeForTR() {
       var userID = Xrm.Page.context.getUserId();
       userID = userID.replace('{', '').replace('}', '');
       console.log("TRA.Currentuser ID: " + userID);

       var employeeID = Xrm.Page.getAttribute("tra_employeenameid").getValue();
       employeeID = employeeID[0].id.replace('{', '').replace('}', '');
       console.log("TRA. employeeID: " + employeeID);

       var isEmployee = false
       if (userID == employeeID) {
           isEmployee = true;
           Xrm.Page.ui.setFormNotification("You can submit this Time Report", "INFO", "submitnotifid");
           //refreshForm();
       };

       console.log("TRA. isEmployee: " + isEmployee);
       return isEmployee;
   }
 