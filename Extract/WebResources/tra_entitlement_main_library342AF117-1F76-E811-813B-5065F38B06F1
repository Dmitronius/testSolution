//22-06-2018 andnov queries default SLA from MSA Template and puts SLA on form
function setDefaultSLA() {
    var msaTemplate = Xrm.Page.getControl("entitlementtemplateid").getAttribute().getValue()[0].id;
    //console.log("msaTemplate: " + msaTemplate);
    msaTemplate = msaTemplate.slice(1, -1);
    //console.log(msaTemplate);

    var defaultSLA = {};
    defaultSLA = getTemplateSLA(msaTemplate);
    //console.log(defaultSLA);
    if (defaultSLA) {
        var slaID = defaultSLA["_slaid_value"];
        var slaName = defaultSLA["_slaid_value@OData.Community.Display.V1.FormattedValue"];
        setTemplateSLA(slaID, slaName);
    }

}

//22-06-2018 andnov Query for SLA from MSA Template
function getTemplateSLA(templateID) {
    var req = new XMLHttpRequest();
    req.open("GET", Xrm.Page.context.getClientUrl() + "/api/data/v8.2/entitlementtemplates(" + templateID + ")?$select=_slaid_value", false);
    req.setRequestHeader("OData-MaxVersion", "4.0");
    req.setRequestHeader("OData-Version", "4.0");
    req.setRequestHeader("Accept", "application/json");
    req.setRequestHeader("Content-Type", "application/json; charset=utf-8");
    req.setRequestHeader("Prefer", "odata.include-annotations=\"*\"");
    var returnValue = null;
    req.onreadystatechange = function () {
        if (this.readyState === 4) {
            req.onreadystatechange = null;
            if (this.status === 200) {
                var result = JSON.parse(this.response);
                var _slaid_value = result["_slaid_value"];
                var _slaid_value_formatted = result["_slaid_value@OData.Community.Display.V1.FormattedValue"];
                var _slaid_value_lookuplogicalname = result["_slaid_value@Microsoft.Dynamics.CRM.lookuplogicalname"];
                console.log(_slaid_value);
                console.log(_slaid_value_formatted);
                console.log(_slaid_value_lookuplogicalname);
                returnValue = result
            } else {
                Xrm.Utility.alertDialog(this.statusText);
            }
        }

    };
    try {
        req.send();
    }
    catch (e) {
        alert(e);
    }
    //console.log(returnValue);
    return returnValue;
}

//22-06-2018 andnov Update SLA on MSA
function setTemplateSLA(slaID, slaName) {
    Xrm.Page.getAttribute("slaid").setValue([{ id: slaID, name: slaName, entityType: "sla" }]);
    //Xrm.Page.data.entity.save();
}

//06-07-2018 andnov Prefilter Customers

function applyCustomerFilter() {

Xrm.Page.getControl("customerid").addPreSearch(function () {

var customer_filter = "<filter type='and' ><filter type='and'><condition attribute='contactid' operator='null' /></filter></filter>" ;
Xrm.Page.getControl("customerid").addCustomFilter(customer_filter, "contact");
console.log ("customer_filter applied");

});

}

function applyVesselFilter(){
    //Replaced by view "Vessel For MSA Lookup View"
    /*
Xrm.Page.getControl("tra_vesselid").addPreSearch(function () {
var vessel_filter = "<filter type='and' ><condition attribute='statecode' operator='eq' value='0' /><condition attribute='tra_entitlementid' operator='null' /></filter>" ;
Xrm.Page.getControl("tra_vesselid").addCustomFilter(vessel_filter, "contact");
console.log ("vessel_filter applied");
});
*/

/*
    var viewId = "{E5E6B807-C1A7-4E1C-B1FA-7ABC34F4E136}";
    var entityName = "new_vessel";//entity name to be filtered
    var viewDisplayName = "Filtered Vessels";//custom view name 
    var lineID = lineID.replace('{', '').replace('}', '');
    var fetchXML = "<fetch>" +
            "<entity name='product' >" +
                "<link-entity name='productassociation' from='associatedproduct' to='productid' >" +
                    "<filter type='and' >" +
                        "<condition attribute='productid' operator='eq' value='" + lineID + "' />" +
                    "</filter>" +
                "</link-entity>" +
            "</entity>" +
        "</fetch>";
    var layoutXml = <grid name="resultset" object="10030" jump="new_name" select="1" preview="1" icon="1" >
                        <row name="result" id="new_vesselsid" >
                            <cell name="new_name" width="300" />
                            <cell name="new_imo" width="100" />
                        </row>
                        </grid> ;

    Xrm.Page.getControl("tra_productid").addCustomView(viewId, entityName, viewDisplayName, fetchXML, layoutXml, true);
*/


}


function generateEntitlementName(executionContext) {
let formContext = executionContext.getFormContext();
if (formContext.ui.getFormType() !== 3 ) {

let nameAttribute = formContext.getAttribute("name");
let nameControl = formContext.getControl("header_name");
let entitlementVesselAttribute = formContext.getAttribute("tra_vesselid").getValue() || [{name : "No Vessel"}];
let entitlementTemplateAttribute = formContext.getAttribute("entitlementtemplateid").getValue() || [{name : "No Template"}];
let entitlementName = entitlementTemplateAttribute[0].name + " : " + entitlementVesselAttribute[0].name;

nameControl.setDisabled(true);

if (nameControl) {
    if (nameAttribute.getValue() != entitlementName );
    nameAttribute.setValue(entitlementName);

}
};
}


function attemptToActivateEntitlement (executionContext) {
    let formContext = executionContext.getFormContext();
    let entitlementId = formContext.data.entity.getId().replace("{", "").replace("}", "");
    let isApproved = formContext.getAttribute('wdt_isapproved').getValue();
    let entitlementStatusCode = formContext.getAttribute('statuscode').getValue();

    let entity = {};
    entity.statecode = 1;
    entity.statuscode = 1;

    if (isApproved===true && entitlementStatusCode === 0 ) {
    Xrm.WebApi.online.updateRecord("entitlement", entitlementId , entity).then(
        function success(result) {
            var updatedEntityId = result.id;
            Xrm.Utility.alertDialog("Entitlement is set to " + formContext.getAttribute('statuscode').getValue() );
        },
        function(error) {
            Xrm.Utility.alertDialog(error.message);
        }
    );
}
}
