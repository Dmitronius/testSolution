<!DOCTYPE html>
<html><head>
    <title>Open cases</title>
    <script src="ClientGlobalContext.js.aspx" type="text/javascript"></script>
    <style type="text/css">html,body{font-family: Segoe UI, Tahoma, Arial;background-color: #d6e8ff;border: 0px; margin: 0px; padding: 0px;}</style>
    <script type="text/javascript" language="javascript">
        
        window.onload = function () {
            merge();
        };

        function getURLParameter(sParam)
        {
            var pageUrl = window.location.search.substring(1);
            var urlVariables = pageUrl.split('&');
            for (var i = 0; i < urlVariables.length; i++) 
            {
                var sParameterName = urlVariables[i].split('=');
                if (sParameterName[0] == sParam) 
                {
                    return sParameterName[1];
                }
            }
            return null;
        };

        function parseDataValue(datavalue) {
            if (datavalue != "") {
                var vals = decodeURIComponent(datavalue).split("&");
                for (var i in vals) {
                    if (vals.hasOwnProperty(i)) {
                        vals[i] = vals[i].replace(/\+/g, " ").split("=");
                    }
                }

                return vals;
            }
            return null;
        }

        function retrieveMultiple(customerId, isAccount) {
            
            var fetchXmlAccount = "<fetch> <entity name='incident' > <attribute name='title' /> <attribute name='ticketnumber' /> <filter> <condition attribute='statecode' operator='eq' value='0' /> </filter> <link-entity name='account' from='accountid' to='accountid' > <filter> <condition attribute='accountid' operator='eq' value='{0}' /> </filter> </link-entity> </entity> </fetch>";
            var fetchXmlContact = "<fetch> <entity name='incident' > <attribute name='title' /> <attribute name='ticketnumber' /> <filter> <condition attribute='statecode' operator='eq' value='0' /> </filter> <link-entity name='contact' from='contactid' to='contactid' > <filter> <condition attribute='contactid' operator='eq' value='{0}' /> </filter> </link-entity> </entity> </fetch>";
            var fetchXml;
            if (isAccount == "true")
                fetchXml = fetchXmlAccount.replace("{0}", customerId);
            else 
                fetchXml = fetchXmlContact.replace("{0}", customerId);
            
            var encodedFetchXml = encodeURIComponent(fetchXml);

            var req = new XMLHttpRequest();
            var returnResults;
            req.open("GET", Xrm.Page.context.getClientUrl() + "/api/data/v8.0/incidents?fetchXml=" + encodedFetchXml, false);
            req.setRequestHeader("OData-MaxVersion", "4.0");
            req.setRequestHeader("OData-Version", "4.0");
            req.setRequestHeader("Accept", "application/json");
            req.setRequestHeader("Prefer", "odata.include-annotations=\"OData.Community.Display.V1.FormattedValue\"");
            req.onreadystatechange = function() {
                if (this.readyState === 4) {
                    req.onreadystatechange = null;
                    if (this.status === 200) {

                        var results = JSON.parse(this.response);
                        returnResults = results;
                    }
                    else {
                        alert(this.statusText);
                    }
                }
            }
            try {
                req.send();
            } catch (e) {
                alert(e);
            }
            return returnResults;
        };
        
        function showDialog() {
            var table = document.getElementById("tbCases");

            var selectedCases = [];
            var selectedCasesUrl = "";
            var count = 0;

            ////push original case
            //selectedCases.push(originalCaseId);
            //selectedCasesUrl += "{" + originalCaseId + "};";
            //count += 1;

            for (var i = 1, row; row = table.rows[i]; i++) {
                //iterate through rows
                //rows would be accessed using the "row" variable assigned in the for loop
                var cb = row.cells[0].childNodes[0].checked;
                if (cb === true) {
                    selectedCases.push(row.cells[3].innerText);
                    selectedCasesUrl += "{" + row.cells[3].innerText + "};";
                    count += 1;
                }
            }

            if (selectedCases.length < 2) {
                alert("Select at least 1 case, please");
                return;
            }

            var dlgOpts = new Xrm.DialogOptions;
            dlgOpts.height = 800;
            dlgOpts.width = 570;
            var dlgArgs = selectedCases;//["948BD05C-F975-E711-8108-5065F38A9A01", "01CD0151-8776-E711-810C-5065F38AEA61"];
            var url = "/_grid/cmds/dlg_mergemultiple.aspx?iObjType=112&requestType=merge&iTotal=" + count + "&sIds=" + selectedCasesUrl;
            Xrm.Internal.openDialog(
                url,
                dlgOpts,
                dlgArgs,
                null,
                null);
        }

        function createTable(entities, originalCaseId) {
            var table = document.createElement("TABLE");
            table.id = "tbCases";
            table.border = "1";
            
            //Add the header row.
            var row = table.insertRow(-1);
            var headerCell = document.createElement("TH");
            headerCell.innerHTML = "";
            row.appendChild(headerCell);

            headerCell = document.createElement("TH");
            headerCell.innerHTML = "Number";
            row.appendChild(headerCell);

            headerCell = document.createElement("TH");
            headerCell.innerHTML = "Title";
            row.appendChild(headerCell);

            headerCell = document.createElement("TH");
            headerCell.innerHTML = "Id";
            headerCell.style.display = "none";
            row.appendChild(headerCell);
            
            //Add the data rows.
            for (var i = 0; i < entities.length; i++) {
                row = table.insertRow(-1);
                var cell = row.insertCell(-1);
                if (originalCaseId.toString().toLowerCase() === entities[i].incidentid.toString().toLowerCase())
                    cell.innerHTML = "<input type=\"checkbox\" name=\"name" + i + "\" checked/>";
                else 
                    cell.innerHTML = "<input type=\"checkbox\" name=\"name" + i + "\" />";
                
                cell = row.insertCell(-1);
                cell.innerHTML = entities[i].ticketnumber;

                cell = row.insertCell(-1);
                cell.innerHTML = entities[i].title;

                cell = row.insertCell(-1);
                cell.innerHTML = entities[i].incidentid;
                cell.style.display = "none";
                
            }
            var dvTable = document.getElementById("tableContainer");
            dvTable.innerHTML = "";
            dvTable.appendChild(table);

        };

        function merge() {
            debugger;

            var dataParameters = getURLParameter("Data");
            var data = parseDataValue(dataParameters);
            var originalCaseId = data[0][1];//["id"];
            var customerId = data[2][1];//["customerId"];
            var isAccount = data[1][1];//["isAccount"];

            if (originalCaseId === undefined || originalCaseId == null) {
                var btn = document.getElementById("btnMerge");
                btn.style.display = "none";
                throw "Original case not found.";
            }
            var items = retrieveMultiple(customerId, isAccount);
            if (items === undefined || items == null) {
                var btn = document.getElementById("btnMerge");
                btn.style.display = "none";
                throw "Other cases not found.";
            }
            createTable(items.value, originalCaseId);
            
        };


    </script>
    <style type="text/css">
    </style>
    </head>
<body>
<label>Select cases that will be merged (initial case is already selected):</label>
<br/>
<div id="tableContainer"></div>
<button onclick="showDialog()" id="btnMerge">Merge</button>&nbsp;<button onclick="window.close()">Cancel</button>
</body></html>
